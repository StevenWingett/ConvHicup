#!/usr/bin/perl

use strict;
use warnings;

##########################################################################################################################################
#Perl script to convert Hi-C data in paired-end SAM/BAM format to Hicpipe input format
########################################################################################################################################## 

#Pass file names as command-line arguments
my @files = @ARGV;

foreach my $file (@files){
  
  chomp $file;
  
  warn "Processing $file\n";
  
  if ($file =~ /\.gz$/){
    open (IN,"zcat $file |") or die "Couldn't read $file : $!";  
  }
  elsif ($file =~ /\.bam$/) {
    open (IN,"samtools view $file |") or die "Couldn't read $file: $!";
  }
  else{
    open (IN, $file) or die "Could not open $file\n";
  }
  
  open (OUT, '>', "$file.raw") or die "Could not write to $file.raw : $!";
  print OUT "chr1\tcoord1\tstrand1\tchr2\tcoord2\tstrand2\n";
  
  while(<IN>){
    if(/^@/){    #Remove SAM header lines
      next;
    }
    
    my $readF = $_;
    my $readR = scalar <IN>;
    
    my $chromosomeF = (split(/\t/, $readF))[2];
    my $chromosomeR = (split(/\t/, $readR))[2];
    my $positionF = (split(/\t/, $readF))[3];
    my $positionR = (split(/\t/, $readR))[3];
    my $seqF = (split(/\t/, $readF))[9];
    my $seqR = (split(/\t/, $readR))[9];

    my $strandF;
    my $strandR;


    if(((split(/\t/,$readF))[1]) & 0x10){    #Analyse the SAM bitwise flag to determine strand
      $strandF = '-';    #Negative strand   
      $positionF = $positionF + length($seqF) - 1;
    }else{
      $strandF = '+';    #Positive strand
    }

    if(((split(/\t/,$readR))[1]) & 0x10){    #Analyse the SAM bitwise flag to determine strand
      $strandR = '-';    #Negative strand
      $positionR = $positionR + length($seqR) - 1;
    }else{
      $strandR = '+';    #Positive strand
    }

    print OUT "$chromosomeF\t$positionF\t$strandF\t$chromosomeR\t$positionR\t$strandR\n";
  }
  close IN;
  close OUT;
}

print "Processing complete\n";

exit;
